openapi: 3.0.0
info:
  title: School management API
  version: 1.0.0
  description: API for adding and fetching a list of schools

paths:
  /api/v3/app/addSchool:
    post:
      summary: Add a new school
      tags: [Schools]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, address, latitude, longitude]
              properties:
                name:
                  type: string
                address:
                  type: string
                latitude:
                  type: number
                  minimum: -90
                  maximum: 90
                longitude:
                  type: number
                  minimum: -180
                  maximum: 180
      responses:
        "200":
          description: School added
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        "400":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/ServerError"

  /api/v3/app/listSchools:
    get:
      summary: get list of schools sorted by proximity
      tags: [Schools]
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
      responses:
        "200":
          description: List of schools
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
        "400":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/ServerError"

  /health:
    get:
      summary: Health check
      tags: [System]
      responses:
        "200":
          description: System health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  uptime:
                    type: string
                  memory:
                    type: object
        "500":
          description: System unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [unhealthy]
                  error:
                    type: string
                  timestamp:
                    type: string
                    format: date-time

components:
  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              errors:
                type: array
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              error:
                type: string
